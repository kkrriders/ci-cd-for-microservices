{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/metrics/quickpulse/types.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AA+BlC,MAAM,CAAN,IAAY,kCAUX;AAVD,WAAY,kCAAkC;IAC5C,mFAA6C,CAAA;IAC7C,+GAAyE,CAAA;IACzE,+EAAyC,CAAA;IACzC,6FAAuD,CAAA;IACvD,uFAAiD,CAAA;IACjD,yFAAmD,CAAA;IACnD,uGAAiE,CAAA;IACjE,iGAA2D,CAAA;IAC3D,mFAA6C,CAAA;AAC/C,CAAC,EAVW,kCAAkC,KAAlC,kCAAkC,QAU7C;AAED,MAAM,CAAN,IAAY,qBAmBX;AAnBD,WAAY,qBAAqB;IAC/B,eAAe;IACf,sEAA6C,CAAA;IAC7C,iCAAiC;IACjC,qEAA4C,CAAA;IAC5C,YAAY;IACZ,iFAAwD,CAAA;IACxD,8BAA8B;IAC9B,6FAAoE,CAAA;IACpE,UAAU;IACV,6EAAoD,CAAA;IACpD,4FAAmE,CAAA;IACnE,qFAA4D,CAAA;IAC5D,aAAa;IACb,wFAA+D,CAAA;IAC/D,uGAA8E,CAAA;IAC9E,gGAAuE,CAAA;IACvE,YAAY;IACZ,iFAAwD,CAAA;AAC1D,CAAC,EAnBW,qBAAqB,KAArB,qBAAqB,QAmBhC;AAkCD,oDAAoD;AACpD,MAAM,CAAN,IAAY,eAWX;AAXD,WAAY,eAAe;IACzB,oCAAiB,CAAA;IACjB,iDAA8B,CAAA;IAC9B,8BAAW,CAAA;IACX,gCAAa,CAAA;IACb,gCAAa,CAAA;IACb,sCAAmB,CAAA;IACnB,kCAAe,CAAA;IACf,4CAAyB,CAAA;IACzB,sCAAmB,CAAA;IACnB,kCAAe,CAAA;AACjB,CAAC,EAXW,eAAe,KAAf,eAAe,QAW1B;AAED,MAAM,CAAN,IAAY,mBAMX;AAND,WAAY,mBAAmB;IAC7B,kCAAW,CAAA;IACX,4CAAqB,CAAA;IACrB,oDAA6B,CAAA;IAC7B,0CAAmB,CAAA;IACnB,oCAAa,CAAA;AACf,CAAC,EANW,mBAAmB,KAAnB,mBAAmB,QAM9B;AAED,MAAM,CAAN,IAAY,sBAQX;AARD,WAAY,sBAAsB;IAChC,2CAAiB,CAAA;IACjB,+CAAqB,CAAA;IACrB,6CAAmB,CAAA;IACnB,uCAAa,CAAA;IACb,mDAAyB,CAAA;IACzB,uCAAa,CAAA;IACb,uCAAa,CAAA;AACf,CAAC,EARW,sBAAsB,KAAtB,sBAAsB,QAQjC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport type { MonitoringDataPoint, PublishResponse } from \"../../generated\";\nimport type { DocumentIngress, CollectionConfigurationError } from \"../../generated\";\n\n/**\n * Quickpulse Exporter Options\n */\nexport interface QuickpulseExporterOptions {\n  endpointUrl: string;\n\n  instrumentationKey: string;\n\n  credentialScopes?: string | string[];\n  /**\n   * Token Credential\n   */\n  credential?: TokenCredential;\n\n  baseMonitoringDataPoint: MonitoringDataPoint;\n\n  postCallback: (response: PublishResponse | undefined) => void;\n\n  getDocumentsFn: () => DocumentIngress[];\n\n  getErrorsFn: () => CollectionConfigurationError[];\n\n  getDerivedMetricValuesFn: () => Map<string, number>;\n}\n\nexport enum QuickPulseOpenTelemetryMetricNames {\n  PHYSICAL_BYTES = \"azureMonitor.physicalBytes\",\n  PROCESSOR_TIME_NORMALIZED = \"azureMonitor.percentProcessorTimeNormalized\",\n  REQUEST_RATE = \"azureMonitor.requestsSec\",\n  REQUEST_FAILURE_RATE = \"azureMonitor.requestsFailedSec\",\n  REQUEST_DURATION = \"azureMonitor.requestDuration\",\n  DEPENDENCY_RATE = \"azureMonitor.dependencyCallsSec\",\n  DEPENDENCY_FAILURE_RATE = \"azureMonitor.dependencyCallsFailedSec\",\n  DEPENDENCY_DURATION = \"azureMonitor.dependencyCallDuration\",\n  EXCEPTION_RATE = \"azureMonitor.exceptionsSec\",\n}\n\nexport enum QuickPulseMetricNames {\n  // Memory (old)\n  COMMITTED_BYTES = \"\\\\Memory\\\\Committed Bytes\",\n  // Memory (new - current process)\n  PHYSICAL_BYTES = \"\\\\Process\\\\Physical Bytes\",\n  // CPU (old)\n  PROCESSOR_TIME = \"\\\\Processor(_Total)\\\\% Processor Time\",\n  // CPU (new - current process)\n  PROCESSOR_TIME_NORMALIZED = \"\\\\% Process\\\\Processor Time Normalized\",\n  // Request\n  REQUEST_RATE = \"\\\\ApplicationInsights\\\\Requests/Sec\",\n  REQUEST_FAILURE_RATE = \"\\\\ApplicationInsights\\\\Requests Failed/Sec\",\n  REQUEST_DURATION = \"\\\\ApplicationInsights\\\\Request Duration\",\n  // Dependency\n  DEPENDENCY_RATE = \"\\\\ApplicationInsights\\\\Dependency Calls/Sec\",\n  DEPENDENCY_FAILURE_RATE = \"\\\\ApplicationInsights\\\\Dependency Calls Failed/Sec\",\n  DEPENDENCY_DURATION = \"\\\\ApplicationInsights\\\\Dependency Call Duration\",\n  // Exception\n  EXCEPTION_RATE = \"\\\\ApplicationInsights\\\\Exceptions/Sec\",\n}\nexport interface TelemetryData {\n  CustomDimensions: Map<string, string>;\n}\nexport interface RequestData extends TelemetryData {\n  Url: string;\n  Duration: number;\n  ResponseCode: number;\n  Success: boolean;\n  Name: string;\n}\n\nexport interface DependencyData extends TelemetryData {\n  //  Target site of a dependency call. Examples are server name, host address.\n  Target: string;\n  Duration: number;\n  Success: boolean;\n  Name: string;\n  ResultCode: number;\n  // Dependency type name. Very low cardinality value for logical grouping of dependencies and interpretation of other fields like commandName and resultCode.Examples are SQL, Azure table, and HTTP.\n  Type: string;\n  // Command initiated by this dependency call. Examples are SQL statement and HTTP URL with all query parameters.\n  Data: string;\n}\n\nexport interface ExceptionData extends TelemetryData {\n  Message: string;\n  StackTrace: string;\n}\n\nexport interface TraceData extends TelemetryData {\n  Message: string;\n}\n\n// copied from exporter constants & added a few more\nexport enum DependencyTypes {\n  InProc = \"InProc\",\n  QueueMessage = \"Queue Message\",\n  Sql = \"SQL\",\n  Http = \"Http\",\n  Grpc = \"GRPC\",\n  Wcf = \"WCF Service\",\n  mysql = \"mysql\",\n  postgresql = \"postgresql\",\n  mongodb = \"mongodb\",\n  redis = \"redis\",\n}\n\nexport enum KnownRequestColumns {\n  Url = \"Url\",\n  Duration = \"Duration\",\n  ResponseCode = \"ResponseCode\",\n  Success = \"Success\",\n  Name = \"Name\",\n}\n\nexport enum KnownDependencyColumns {\n  Target = \"Target\",\n  Duration = \"Duration\",\n  Success = \"Success\",\n  Name = \"Name\",\n  ResultCode = \"ResultCode\",\n  Type = \"Type\",\n  Data = \"Data\",\n}\n"]}