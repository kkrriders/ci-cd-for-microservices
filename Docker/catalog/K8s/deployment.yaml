apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-deployment
  namespace: microservices
  labels:
    app: catalog
    tier: backend
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "catalog"
    vault.hashicorp.com/agent-inject-secret-database: "database/creds/catalog"
    vault.hashicorp.com/agent-inject-template-database: |
      {{- with secret "database/creds/catalog" -}}
      {
        "MONGO_URI": "mongodb://{{ .Data.username }}:{{ .Data.password }}@mongodb-service:27017/catalog?authSource=admin",
        "REDIS_URI": "redis://{{ with secret \"redis/creds/catalog\" }}{{ .Data.password }}@{{ end }}redis-service:6379"
      }
      {{- end -}}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: catalog
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: catalog
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8082"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "catalog"
    spec:
      serviceAccountName: catalog-sa
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: catalog
        image: ${REGISTRY_URL}/catalog-service:${IMAGE_TAG}
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        ports:
        - containerPort: 8082
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: catalog-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: catalog-config
              key: PORT
        envFrom:
        - configMapRef:
            name: catalog-config
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: logs-volume
          mountPath: /app/logs
        - name: vault-secrets
          mountPath: /vault/secrets
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      - name: vault-secrets
        emptyDir:
          medium: Memory
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - catalog
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
      - name: registry-credentials
