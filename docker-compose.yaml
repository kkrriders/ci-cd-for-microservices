version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=Services_db
      # Add these for security in development
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo-data:/data/db
      - ./Docker/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - microservices-network

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - microservices-network

  catalog:
    build: 
      context: ./Docker/catalog
      dockerfile: Dockerfile
    container_name: catalog-container
    ports:
      - "8082:8082"
    environment:
      - NODE_ENV=development
      - PORT=8082
      - MONGODB_URI=mongodb://root:example@mongo:27017/Services_db?authSource=admin
      - REDIS_URI=redis://redis:6379
    env_file:
      - ./Docker/catalog/.env
    volumes:
      - ./Docker/catalog:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - microservices-network
    # Add healthcheck
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  orders:
    build: ./Docker/orders
    container_name: orders-container
    ports:
      - "8083:8083"
    environment:
      - NODE_ENV=development
      - PORT=8083
      - MONGODB_URI=mongodb://root:example@mongo:27017/Services_db?authSource=admin
      - REDIS_URI=redis://redis:6379
    env_file:
      - ./Docker/orders/.env
    volumes:
      - ./Docker/orders:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
    depends_on:
      - mongo
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data: