image:
  repository: kong
  tag: 3.4.1-alpine

env:
  database: "postgres"
  pg_host: "kong-postgresql"
  pg_password:
    valueFrom:
      secretKeyRef:
        name: kong-database-password
        key: password
  pg_user: "kong"
  pg_database: "kong"

admin:
  enabled: true
  http:
    enabled: false
  tls:
    enabled: true
    servicePort: 8444
    containerPort: 8444
    parameters:
    - http2

proxy:
  enabled: true
  tls:
    enabled: true
  annotations:
    konghq.com/plugins: rate-limiting,jwt-auth,cors,bot-detection,ip-restriction

ingress:
  admin:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
    - host: kong-admin.internal.example.com
      paths:
      - path: /
        pathType: Prefix
    tls:
    - secretName: kong-admin-tls
      hosts:
      - kong-admin.internal.example.com

postgresql:
  enabled: true
  existingSecret: kong-database-password
  secretKeys:
    adminPasswordKey: password
  postgresUser: kong
  postgresDatabase: kong
  service:
    port: 5432

plugins:
- name: rate-limiting
  config:
    minute: 100
    policy: local
- name: cors
  config:
    origins:
    - 'https://your-frontend-domain.com'
    - 'https://admin.your-domain.com'
    methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
    headers:
    - Accept
    - Authorization
    - Content-Type
    - Origin
    - X-Requested-With
    exposed_headers:
    - X-Auth-Token
    credentials: true
    max_age: 3600
- name: jwt-auth
  config:
    key_claim_name: kid
    claims_to_verify:
    - exp
    - nbf
- name: bot-detection
  config:
    deny: ["curl", "wget", "PostmanRuntime"]
- name: ip-restriction
  config:
    allow:
    - "10.0.0.0/8"  # Internal IPs only 